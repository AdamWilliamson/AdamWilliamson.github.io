import{d as g,g as s,h as w,k,o as t,i as l,w as e,f as o,b as a,e as y,j as c,a as b}from"./index-1c832cba.js";const V=b("h3",null,"Is Not Null",-1),O=g({__name:"IsNotNullValidation",setup(x){const u=s(""),r=s(""),_=s(""),d=s("");return w(async()=>{[u.value,r.value,_.value,d.value]=await k("IsNotNull")}),(C,I)=>{const p=o("v-card-title"),i=o("v-card-text"),v=o("v-card"),m=o("v-col"),f=o("v-row"),n=o("CodeWindow"),N=o("PanelsOrTabs"),h=o("v-container");return t(),l(h,{fluid:"","bg-color":"surface"},{default:e(()=>[a(f,null,{default:e(()=>[a(m,null,{default:e(()=>[a(v,null,{default:e(()=>[a(p,null,{default:e(()=>[V]),_:1}),a(i,null,{default:e(()=>[y("Is Not Null works on any null compatible type, both nullable, and class types. It will report an error if the field contains a null.")]),_:1})]),_:1})]),_:1})]),_:1}),a(N,null,{code:e(()=>[u.value?(t(),l(n,{key:0,language:"csharp",source:u.value},null,8,["source"])):c("",!0)]),request:e(()=>[r.value?(t(),l(n,{key:0,language:"csharp",source:r.value},null,8,["source"])):c("",!0)]),errorreport:e(()=>[d.value?(t(),l(n,{key:0,language:"csharp",source:d.value},null,8,["source"])):c("",!0)]),openapi:e(()=>[_.value?(t(),l(n,{key:0,language:"csharp",source:_.value},null,8,["source"])):c("",!0)]),_:1})]),_:1})}}});export{O as default};
