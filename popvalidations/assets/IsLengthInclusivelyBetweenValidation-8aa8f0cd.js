import{d as w,g as l,h as k,k as y,o,i as a,w as e,f as n,b as t,e as b,j as c,a as C}from"./index-068c9ae4.js";const V=C("h3",null,"Is Length Inclusively Between",-1),L=w({__name:"IsLengthInclusivelyBetweenValidation",setup(x){const u=l(""),r=l(""),_=l(""),i=l("");return k(async()=>{[u.value,r.value,_.value,i.value]=await y("IsLengthInclusivelyBetween")}),(B,I)=>{const d=n("v-card-title"),v=n("v-card-text"),p=n("v-card"),m=n("v-col"),h=n("v-row"),s=n("CodeWindow"),f=n("PanelsOrTabs"),g=n("v-container");return o(),a(g,{fluid:"","bg-color":"surface"},{default:e(()=>[t(h,null,{default:e(()=>[t(m,null,{default:e(()=>[t(p,null,{default:e(()=>[t(d,null,{default:e(()=>[V]),_:1}),t(v,null,{default:e(()=>[b(" Checks if the item is something that can be counted, and checks if the number of items is between 2 values, inclusive of those values. ")]),_:1})]),_:1})]),_:1})]),_:1}),t(f,null,{code:e(()=>[u.value?(o(),a(s,{key:0,language:"csharp",source:u.value},null,8,["source"])):c("",!0)]),request:e(()=>[r.value?(o(),a(s,{key:0,language:"csharp",source:r.value},null,8,["source"])):c("",!0)]),errorreport:e(()=>[i.value?(o(),a(s,{key:0,language:"csharp",source:i.value},null,8,["source"])):c("",!0)]),openapi:e(()=>[_.value?(o(),a(s,{key:0,language:"csharp",source:_.value},null,8,["source"])):c("",!0)]),_:1})]),_:1})}}});export{L as default};
