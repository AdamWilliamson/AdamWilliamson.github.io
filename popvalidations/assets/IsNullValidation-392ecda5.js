import{d as k,g as u,h as N,k as C,o as l,i as o,w as e,f as t,b as n,e as m,j as c,a as V}from"./index-1c832cba.js";const x=V("h3",null,"Is Null",-1),q=k({__name:"IsNullValidation",setup(I){const s=u(""),r=u(""),_=u(""),d=u("");return N(async()=>{[s.value,r.value,_.value,d.value]=await C("IsNull")}),(A,O)=>{const h=t("v-card-title"),i=t("v-card-text"),p=t("v-card"),v=t("v-col"),f=t("v-row"),a=t("CodeWindow"),b=t("PanelsOrTabs"),g=t("v-icon"),w=t("v-btn"),y=t("v-container");return l(),o(y,{fluid:"","bg-color":"surface"},{default:e(()=>[n(f,null,{default:e(()=>[n(v,null,{default:e(()=>[n(p,null,{default:e(()=>[n(h,null,{default:e(()=>[x]),_:1}),n(i,null,{default:e(()=>[m('Is Null works on any null compatible type, both nullable, and class types. It will report an error if the field contains a null (not default, for struct types), and will add "required" to the OpenApi schema.')]),_:1})]),_:1})]),_:1})]),_:1}),n(b,null,{code:e(()=>[s.value?(l(),o(a,{key:0,language:"csharp",source:s.value},null,8,["source"])):c("",!0)]),request:e(()=>[r.value?(l(),o(a,{key:0,language:"csharp",source:r.value},null,8,["source"])):c("",!0)]),errorreport:e(()=>[d.value?(l(),o(a,{key:0,language:"csharp",source:d.value},null,8,["source"])):c("",!0)]),openapi:e(()=>[_.value?(l(),o(a,{key:0,language:"csharp",source:_.value},null,8,["source"])):c("",!0)]),_:1}),n(f,null,{default:e(()=>[n(v,null,{default:e(()=>[n(p,null,{default:e(()=>[n(i,null,{default:e(()=>[m("Contributed by Andrew Williamson. "),n(w,{href:"https://github.com/AWilliamson88",flat:"",link:""},{default:e(()=>[n(g,{icon:"mdi-github"})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})}}});export{q as default};
